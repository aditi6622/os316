#include<iostream>
using namespace std;
int main()
{
	int n,burst_time[n];
cout<<"enter the number of processes:\n";
cin>>n;
cout<<"enter the burst time of each process\n";
for(int i=0;i<n;i++)
{
	cout<<"enter burst time for process: "<<i+1;
	cout<<"\n";
	cin>>burst_time[i];
}
int position,arrival_time[n],process_number[n];
int turnaround_time[n],response_time[n];
int sum=0,wsum=0,turn_temp,tsum=0,min;
float waiting_avg,turnaround_avg;
int burst=0,k=1;
for(int i=0;i<n;i++)
{
	cout<<"enter arrival time for process: "<<i+1;
	cout<<"\n";
	cin>>arrival_time[i];
}

int temp,temp1;
for(int i=0;i<n;i++)
{
for(int j=0;j<n;j++)
{
if(arrival_time[i]<arrival_time[j])/*sorting acc to arrival time*/
{
temp=process_number[j];
process_number[j]=process_number[i];
process_number[i]=temp;
temp=arrival_time[j];
arrival_time[j]=arrival_time[i];
arrival_time[i]=temp;
temp1=burst_time[j];
burst_time[j]=burst_time[i];
burst_time[i]=temp1;
}
}
}
for(int j=0;j<n;j++)
{   burst=burst+burst_time[j];
   min=burst_time[k];
for(int i=k;i<n;i++)/*main logic*/
{ min=priority[k];
clock=burst_time[k];
waiting_time[0]=0;
for(int a=1;a<n;a++)
{
sum=sum+burst_time[a-1];
waiting_time[a]=sum-arrival_time[a]+clock;
}
for(int b=0;b<n;b++)
{
 	priority[b]=0;
 	priority[b]=1+waiting_time[b]/burst_time[b];
}
if (burst>=arrival_time[i])
{
if(priority[i]<min)
{
temp=process_number[k];
process_number[k]=process_number[i];
process_number[i]=temp;
temp=arrival_time[k];
arrival_time[k]=arrival_time[i];
arrival_time[i]=temp;
temp1=burst_time[k];
burst_time[k]=burst_time[i];
burst_time[i]=temp1;
temp=priority[k];
priority[k]=priority[i];
priority[i]=temp;

}
}
}
k++;
}
 
}
